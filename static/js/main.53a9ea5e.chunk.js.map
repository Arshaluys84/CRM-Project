{"version":3,"sources":["components/Ui/Loading.js","components/Ui/Input.js","store/constant.js","components/AddUser/AddUserForm.js","common/Helpers.js","components/Ui/Backdrop.js","store/redux/reduxConstants.js","store/redux/employeesReducer.js","components/Table/MainEmployeeTable.js","components/Ui/MainHeader.js","pages/Costs.js","pages/Budget.js","components/AddUser/AddClient.js","store/redux/dealsReducer.js","pages/Deals.js","App.js","reportWebVitals.js","store/redux/store.js","index.js"],"names":["Loading","Input","value","onChange","type","placeholder","name","id","className","DELETE_BUTTON","FIXED_CURRENT_BUDGET_WITH_USD","toFixed","CURRENCY_LIST","Currency","title","Dollar","Euro","Ruble","AMD","COMPANY_LIST","EPAM","EPAM_SYSTEMS","EPAM_ANYWHERE","GOOGLE","CLIENT_STATUS","done","in_progress","booked","userMock","key","lastName","address","company","dateOfBoarding","salary","currency","actions","EMPLOYEES_LIST","Date","getFullYear","getMonth","getDate","clientMock","client","product","date","price","quantity","summary","status","CLIENT_LIST","dealsColumns","dataIndex","employeesColumns","editable","AddUserForm","onConfirm","validateMessage","useState","employee","setEmployee","handleChangeEmployee","e","prev","now","target","onSubmit","preventDefault","Object","values","map","comp","min","max","cur","compare","a","b","Backdrop","backdropHandler","onClick","ADD_DEAL","DELETE_DEAL","UPDATE_DEAL","ADD_EMPLOYEE","DELETE_EMPLOYEE","UPDATE_EMPLOYEE","SET_VALIDATION_MESSAGE","initialState","employeesList","employeeKey","validationMessage","deleteEmployeeCreator","payload","updateEmployeesCreator","setValidationMessageCreator","employees","state","sort","MainEmployeeTable","totalSalary","formIsOpen","setFormIsOpen","updatedCompany","setUpdatedCompany","useSelector","updatedKey","dispatch","useDispatch","useEffect","length","emp","config","salaryExchange","reduce","filter","item","render","record","handleButton","tag","currentTarget","dataset","button","deleteEmployeeHandler","index","React","useCallback","dataSource","columns","style","header","backgroundColor","height","fontSize","color","content","display","gap","textAlign","MainHeader","to","Costs","fixedTotalSalary","balance","Budget","clientIncome","AddClient","onClientConfirm","clientList","setClientList","clientChangeHandler","clientKey","income","deals","deleteDealCreator","updateDealCreator","Deals","clientIncomeHandler","clientFormIsOpen","setClientFormIsOpen","updatedClient","setUpdatedClient","dealsStore","updatedClientKey","dealIncome","clientHandler","confirmClient","App","totalSalaryForCosts","setTotalSalaryForCosts","setClientIncome","isLoading","setIsLoading","timer","setTimeout","clearTimeout","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53a9ea5e.chunk.js","sourcesContent":["export const Loading =()=>{\r\n    return <p>\r\n        LOADING....\r\n    </p>\r\n}","import React from 'react';\r\n\r\nconst Input =({value,onChange,type,placeholder,name,id}) => {\r\n  return < >\r\n      <input className='input' id={id} value={value} name={name} onChange={onChange} type={type} placeholder={placeholder} />\r\n  </>\r\n}\r\nexport default Input","export const DEFAULT_CURRENCY = \"$\"\r\nexport const AMD_RATE_WITH_USD = 480\r\nexport const EURO_RATE_WITH_USD = 0.86\r\nexport const RUBLE_RATE_WITH_USD = 70\r\nexport const CURRENT_BUDGET = 4000000\r\nexport const DELETE_BUTTON = \"delete\"\r\nconst CURRENT_BUDGET_WITH_USD = CURRENT_BUDGET / AMD_RATE_WITH_USD\r\nexport const FIXED_CURRENT_BUDGET_WITH_USD = CURRENT_BUDGET_WITH_USD.toFixed(2)\r\nexport const CURRENCY_LIST = {\r\n    Currency: {\r\n        id: 1,\r\n        title: \"Choose any\",\r\n        value: \"$\"\r\n    },\r\n    Dollar: {\r\n        id: 2,\r\n        title: \"USD\",\r\n        value: \"$\"\r\n    },\r\n    Euro: {\r\n        id: 3,\r\n        title: \"EURO\",\r\n        value: \"\\u20ac\"\r\n    },\r\n    Ruble: {\r\n        id: 4,\r\n        title: \"RUBLE\",\r\n        value: \"\\u20BD\"\r\n    },\r\n    AMD: {\r\n        id: 5,\r\n        title: \"AMD\",\r\n        value: \"\\u058f\"\r\n    }\r\n}\r\n\r\nexport const COMPANY_LIST = {\r\n    EPAM: {\r\n        id: 1,\r\n        value: \"EPAM\"\r\n    },\r\n    EPAM_SYSTEMS: {\r\n        id: 2,\r\n        value: \"EPAM SYSTEMS\"\r\n    },\r\n    EPAM_ANYWHERE: {\r\n        id: 3,\r\n        value: \"EPAM ANYWHERE\"\r\n    },\r\n    GOOGLE: {\r\n        id: 4,\r\n        value: \"GOOGLE\"\r\n    }\r\n}\r\nexport const CLIENT_STATUS = {\r\n    done: {\r\n        id: 1,\r\n        value: 'done',\r\n    },\r\n    in_progress: {\r\n        id: 2,\r\n        value: 'in progress'\r\n    },\r\n    booked: {\r\n        id: 3,\r\n        value: 'booked'\r\n    }\r\n}\r\nexport const userMock = {\r\n    key: '',\r\n    name: '',\r\n    lastName: '',\r\n    address: '',\r\n    company: '',\r\n    dateOfBoarding: '',\r\n    salary: \"\",\r\n    currency: '',\r\n    actions: ['delete', 'update'],\r\n\r\n}\r\nexport const EMPLOYEES_LIST = [\r\n    {\r\n        key: 1,\r\n        name: 'Mike',\r\n        lastName: 'Ticon',\r\n        address: '10 Downing Street',\r\n        company: 'EPAM SYSTEMS',\r\n        dateOfBoarding: `${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()}`,\r\n        salary: 300,\r\n        currency: CURRENCY_LIST.Dollar.value,\r\n        actions: ['delete', 'update']\r\n\r\n    },\r\n    {\r\n        key: 2,\r\n        name: 'John',\r\n        lastName: 'Lenon',\r\n        address: '10 Downing Street',\r\n        company: 'EPAM',\r\n        dateOfBoarding: `${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()}`,\r\n        salary: 430,\r\n        currency: CURRENCY_LIST.Euro.value,\r\n        actions: ['delete', 'update']\r\n    },\r\n]\r\nexport const clientMock = {\r\n    key: '',\r\n    client: '',\r\n    product: '',\r\n    date: '',\r\n    price: '',\r\n    quantity: '',\r\n    summary: 0,\r\n    status: '',\r\n    actions: ['delete', 'update']\r\n\r\n}\r\n\r\nexport const CLIENT_LIST = [\r\n    {\r\n        key: '1',\r\n        product: 'notebook',\r\n        client: 'Mike',\r\n        date: `${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()}`,\r\n        price: 800,\r\n        quantity: 4,\r\n        summary: 800 * 4,\r\n        status: 'done',\r\n        actions: ['delete', 'update']\r\n    },\r\n    {\r\n        key: '2',\r\n        client: 'John',\r\n        date: `${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()}`,\r\n        product: 'mouse',\r\n        price: 7,\r\n        quantity: 150,\r\n        summary: 7 * 150,\r\n        status: 'done',\r\n        actions: ['delete', 'update']\r\n    },\r\n]\r\n\r\nexport const dealsColumns = [\r\n    {\r\n        title: 'Client',\r\n        dataIndex: 'client',\r\n        key: 'client',\r\n    },\r\n    {\r\n        title: 'Product',\r\n        dataIndex: 'product',\r\n        key: 'product',\r\n    },\r\n    {\r\n        title: 'Date Of Order',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n    },\r\n    {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        key: 'price',\r\n    },\r\n    {\r\n        title: 'Quantity',\r\n        dataIndex: 'quantity',\r\n        key: 'quantity',\r\n    },\r\n    {\r\n        title: 'Summary',\r\n        dataIndex: 'summary',\r\n        key: 'summary',\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        dataIndex: 'actions',\r\n        key: 'actions',\r\n    },\r\n];\r\n\r\nexport const employeesColumns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'lastName',\r\n        dataIndex: 'lastName',\r\n        key: 'lastName',\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n    },\r\n    {\r\n        title: 'company',\r\n        dataIndex: 'company',\r\n        key: 'company',\r\n        editable: true\r\n    },\r\n    {\r\n        title: 'date Of Boarding',\r\n        dataIndex: 'dateOfBoarding',\r\n        key: 'dateOfBoarding',\r\n    },\r\n    {\r\n        title: 'salary',\r\n        dataIndex: 'salary',\r\n        key: 'salary',\r\n    },\r\n    {\r\n        title: 'currency',\r\n        dataIndex: 'currency',\r\n        key: 'currency',\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        dataIndex: 'actions',\r\n        key: 'actions',\r\n    },\r\n]","import Input from \"../Ui/Input\";\r\nimport React, {useState} from \"react\";\r\nimport {userMock} from \"../../store/constant\";\r\nimport {COMPANY_LIST, CURRENCY_LIST} from \"../../store/constant\";\r\n\r\nconst AddUserForm = ({onConfirm, validateMessage}) => {\r\n    const [employee, setEmployee] = useState(userMock)\r\n    const handleChangeEmployee = (e) => {\r\n        setEmployee(prev => ({\r\n            ...prev,\r\n            key: Date.now(),\r\n            [e.target.name]: e.target.value,\r\n        }))\r\n    }\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        onConfirm(employee)\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmitHandler} className='form'>\r\n            <Input type='text' value={employee.name} name='name' placeholder='name' onChange={handleChangeEmployee}/>\r\n            <Input type='text' value={employee.lastName} name='lastName' placeholder='lastName'\r\n                   onChange={handleChangeEmployee}/>\r\n            <Input type='text' value={employee.address} placeholder='address' name='address'\r\n                   onChange={handleChangeEmployee}/>\r\n            <select name=\"company\" onChange={(e) => handleChangeEmployee(e)}>\r\n                {Object.values(COMPANY_LIST).map(comp => <option key={comp.id}\r\n                                                                 value={comp.value}> {comp.value}</option>)}\r\n            </select>\r\n            <Input type='date' value={employee.dateOfBoarding} name='dateOfBoarding' placeholder='dateOfBoarding'\r\n                   onChange={handleChangeEmployee} min=\"1997-01-01\" max=\"2030-12-31\"/>\r\n            <Input type='number' value={employee.salary} name='salary' placeholder='salary'\r\n                   onChange={handleChangeEmployee}/>\r\n            <select name=\"currency\" onChange={(e) => handleChangeEmployee(e)}>\r\n                {Object.values(CURRENCY_LIST).map(cur => <option value={cur.value} key={cur.id}>{cur.title}</option>)}\r\n            </select>\r\n            <button className='button' type=\"submit\">Confirm</button>\r\n            {validateMessage ? <p>{validateMessage} </p> : ''}\r\n        </form>)\r\n}\r\nexport default AddUserForm","import {\r\n    EURO_RATE_WITH_USD,\r\n    AMD_RATE_WITH_USD,\r\n    RUBLE_RATE_WITH_USD,\r\n    DEFAULT_CURRENCY,\r\n    CURRENCY_LIST\r\n} from \"../store/constant\";\r\n\r\nexport const salaryExchange = (config) => {\r\n    if (!config?.salary || !config?.currency) {\r\n        return 0\r\n    }\r\n\r\n    if (config.currency === DEFAULT_CURRENCY) {\r\n        return config.salary\r\n    }\r\n    switch (config.currency) {\r\n        case CURRENCY_LIST.AMD.value: {\r\n            return 1 / AMD_RATE_WITH_USD * config.salary\r\n        }\r\n        case CURRENCY_LIST.Euro.value: {\r\n            return 1 / EURO_RATE_WITH_USD * config.salary\r\n        }\r\n        case CURRENCY_LIST.Ruble.value: {\r\n            return 1 / RUBLE_RATE_WITH_USD * config.salary\r\n        }\r\n        default : {\r\n            return config.salary\r\n        }\r\n    }\r\n}\r\nexport const compare = (a, b) => a.key > b.key ? 1 : -1\r\n\r\n\r\n","const Backdrop = ({backdropHandler}) => {\r\n    return <div className=\"backdrop\" onClick={backdropHandler}>\r\n    </div>\r\n}\r\nexport default Backdrop","export const ADD_DEAL='ADD_DEAL'\r\nexport const DELETE_DEAL='DELETE_DEAL'\r\nexport const UPDATE_DEAL='UPDATE_DEAL'\r\nexport const ADD_EMPLOYEE='ADD_EMPLOYEE'\r\nexport const DELETE_EMPLOYEE='DELETE_EMPLOYEE'\r\nexport const UPDATE_EMPLOYEE='UPDATE_EMPLOYEE'\r\nexport const SET_VALIDATION_MESSAGE='SET_VALIDATION_MESSAGE'","import { EMPLOYEES_LIST} from \"../constant\";\r\nimport {compare} from \"../../common/Helpers\";\r\nimport {ADD_EMPLOYEE, DELETE_EMPLOYEE, SET_VALIDATION_MESSAGE, UPDATE_EMPLOYEE} from \"./reduxConstants\";\r\n\r\nconst initialState = {\r\n    employeesList: EMPLOYEES_LIST,\r\n    employeeKey: '',\r\n    validationMessage:''\r\n}\r\nexport const employeesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_EMPLOYEE: {\r\n            return {\r\n                ...state,\r\n                employeesList: [...state.employeesList, action.payload]\r\n            }\r\n        }\r\n        case DELETE_EMPLOYEE: {\r\n            return {\r\n                ...state,\r\n                employeesList: state.employeesList.filter(item => item.key !== action.payload.key)\r\n            }\r\n        }\r\n        case UPDATE_EMPLOYEE: {\r\n            return {\r\n                ...state,\r\n                employeeKey: action.payload.key\r\n            }\r\n        }\r\n        case SET_VALIDATION_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                validationMessage: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addEmployeeCreator = (payload) => ({type: ADD_EMPLOYEE, payload})\r\nexport const deleteEmployeeCreator = (payload) => ({type: DELETE_EMPLOYEE, payload})\r\nexport const updateEmployeesCreator = (payload) => ({type: UPDATE_EMPLOYEE, payload})\r\nexport const setValidationMessageCreator = (payload) => ({type: SET_VALIDATION_MESSAGE, payload})\r\nexport const employees = (state) => state.employees.employeesList.sort(compare)\r\nexport const employeeKey = (state) => state.employees.employeeKey\r\nexport const validationMessage = (state) => state.employees.validationMessage\r\n\r\n\r\n\r\n\r\n","import {Table} from \"antd\";\r\nimport 'antd/dist/antd.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport AddUserForm from \"../AddUser/AddUserForm\";\r\nimport {salaryExchange} from \"../../common/Helpers\";\r\nimport Backdrop from \"../Ui/Backdrop\";\r\nimport {DELETE_BUTTON, employeesColumns,} from \"../../store/constant\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addEmployeeCreator,\r\n    deleteEmployeeCreator,\r\n    employeeKey,\r\n    employees, setValidationMessageCreator,\r\n    updateEmployeesCreator, validationMessage\r\n} from \"../../store/redux/employeesReducer\";\r\n\r\nconst MainEmployeeTable = ({totalSalary}) => {\r\n    const [formIsOpen, setFormIsOpen] = useState(false)\r\n    const [updatedCompany, setUpdatedCompany] = useState(false)\r\n    const employeesList = useSelector(employees)\r\n    const updatedKey = useSelector(employeeKey)\r\n    const validateMessage = useSelector(validationMessage)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (employeesList.length > 0) {\r\n            totalSalary(employeesList.map(emp => salaryExchange(emp)).reduce((a, b) => a + +b))\r\n        }\r\n    }, [employeesList, totalSalary])\r\n\r\n    const deleteEmployeeHandler = (button, tag) => {\r\n        if (tag === DELETE_BUTTON) {\r\n            dispatch(deleteEmployeeCreator(button))\r\n        } else {\r\n            setFormIsOpen(false)\r\n            setUpdatedCompany(true)\r\n            dispatch(updateEmployeesCreator(button))\r\n            dispatch(deleteEmployeeCreator(button))\r\n        }\r\n    }\r\n    employeesColumns.filter(item => item.key === 'actions').map(item => item\r\n        .render = (actions, record) => {\r\n\r\n        const handleButton = (e) => {\r\n            const tag = e.currentTarget.dataset.tag\r\n            deleteEmployeeHandler(record, tag)\r\n        }\r\n        return (<>  {actions.map((tag, index) => <div key={index}>\r\n            <button className={`button ${tag}`}\r\n                    data-tag={tag}\r\n                    key={index}\r\n                    name={tag} onClick={handleButton}>\r\n                {tag}\r\n            </button>\r\n        </div>)}   </>)\r\n    })\r\n\r\n    const onclickAddHandler = () => {\r\n        setFormIsOpen(prev => !prev)\r\n    }\r\n    const onConfirm = React.useCallback((employee) => {\r\n        if (employee.name === '' || employee.salary <= 0 || employee.currency === '') {\r\n            dispatch(setValidationMessageCreator('Name , salary, currency is required'))\r\n            return;\r\n        }\r\n        dispatch(addEmployeeCreator({...employee, key: updatedKey || Date.now()}))\r\n        setFormIsOpen(false)\r\n        setUpdatedCompany(false)\r\n        dispatch(updateEmployeesCreator(''))\r\n        dispatch(setValidationMessageCreator(''))\r\n    }, [updatedKey, dispatch])\r\n    const backdropHandler = () => {\r\n        setFormIsOpen(prev => !prev)\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={onclickAddHandler}>Add user</button>\r\n            {formIsOpen && <AddUserForm onConfirm={onConfirm} validateMessage={validateMessage}/>}\r\n            {formIsOpen && <Backdrop backdropHandler={backdropHandler}/>}\r\n            {updatedCompany && <AddUserForm onConfirm={onConfirm} validateMessage={validateMessage}/>}\r\n            {updatedCompany && <Backdrop backdropHandler={backdropHandler}/>}\r\n            <Table dataSource={employeesList} columns={employeesColumns}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default MainEmployeeTable\r\n\r\n","import React from \"react\";\r\nimport {Header} from \"antd/es/layout/layout\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst style = {\r\n    header: {\r\n        backgroundColor: '#b49dc8',\r\n        height: 100 + 'px',\r\n        fontSize: 25 + 'px',\r\n        color: 'white',\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        gap: 10 + 'px',\r\n        textAlign: 'center',\r\n    }\r\n}\r\nconst MainHeader = () => {\r\n    return <Header style={style.header}>\r\n        <div style={style.content}>\r\n            <span><NavLink to='/'>Home</NavLink> </span>\r\n            <span><NavLink to='/costs'>Costs</NavLink></span>\r\n            <span><NavLink to='/budget'>Budget</NavLink></span>\r\n            <span><NavLink to='/deals'>Deals</NavLink></span>\r\n        </div>\r\n    </Header>\r\n}\r\n\r\nexport default MainHeader","import {Card} from \"antd\";\r\nimport {FIXED_CURRENT_BUDGET_WITH_USD} from \"../store/constant\";\r\n\r\nconst Costs = ({totalSalary}) => {\r\n    const fixedTotalSalary = totalSalary.toFixed(2)\r\n    let balance = FIXED_CURRENT_BUDGET_WITH_USD - fixedTotalSalary\r\n    return <Card>\r\n        <p>Costs on Salary: <span>{fixedTotalSalary}</span></p>\r\n        <p>Company Budget: <span>{FIXED_CURRENT_BUDGET_WITH_USD}</span></p>\r\n        <p> Balance :{balance} </p>\r\n\r\n    </Card>\r\n}\r\nexport default Costs","import {Card} from \"antd\";\r\nimport { FIXED_CURRENT_BUDGET_WITH_USD} from \"../store/constant\";\r\n\r\n\r\nconst Budget = ({totalSalary,clientIncome}) => {\r\n    return <Card>\r\n        <h3>Our Budget was {FIXED_CURRENT_BUDGET_WITH_USD}</h3>\r\n        <h3>our Salary for employees is : {totalSalary}</h3>\r\n        <h3>our Income from sales is :{clientIncome}</h3>\r\n        <h2>So now we have :{FIXED_CURRENT_BUDGET_WITH_USD-totalSalary+clientIncome}</h2>\r\n\r\n    </Card>\r\n}\r\n\r\nexport default Budget","import Input from \"../Ui/Input\";\r\nimport {useState} from \"react\";\r\nimport {CLIENT_STATUS, clientMock} from \"../../store/constant\";\r\n\r\nconst AddClient = ({onClientConfirm}) => {\r\n    const [clientList, setClientList] = useState(clientMock)\r\n    const clientChangeHandler = e => {\r\n        setClientList(\r\n            prev => ({\r\n                ...prev,\r\n                key: Date.now(),\r\n                [e.target.name]: e.target.value,\r\n            })\r\n        )\r\n    }\r\n    const clientSubmitHandler = e => {\r\n        e.preventDefault()\r\n        clientList.summary = clientList.quantity * clientList.price\r\n        onClientConfirm(clientList)\r\n    }\r\n    return <form onSubmit={clientSubmitHandler}>\r\n        <Input type=\"text\" name=\"product\" value={clientList.product} id=\"product\" placeholder=\"product\"\r\n               onChange={clientChangeHandler}/>\r\n        <Input type=\"text\" value={clientList.client} name=\"client\" id=\"client\" placeholder=\"client\"\r\n               onChange={clientChangeHandler}/>\r\n        <Input type=\"date\" name=\"date\" id=\"date\" value={clientList.date} placeholder=\"date\"\r\n               onChange={clientChangeHandler}/>\r\n        <Input type=\"number\" name=\"price\" id=\"price\" value={clientList.price} placeholder=\"price\"\r\n               onChange={clientChangeHandler}/>\r\n        <Input type=\"number\" name=\"quantity\" id=\"quantity\" value={clientList.quantity} placeholder=\"quantity\"\r\n               onChange={clientChangeHandler}/>\r\n        <select name=\"status\" onChange={(e) => clientChangeHandler(e)}>\r\n            {Object.values(CLIENT_STATUS).map(comp => <option key={comp.id}\r\n                                                              value={comp.value}> {comp.value}</option>)}\r\n        </select>\r\n        <button>Add</button>\r\n\r\n    </form>\r\n}\r\n\r\nexport default AddClient\r\n\r\n\r\n","import {CLIENT_LIST} from \"../constant\";\r\nimport {compare} from \"../../common/Helpers\";\r\nimport {ADD_DEAL, DELETE_DEAL, UPDATE_DEAL} from \"./reduxConstants\";\r\n\r\nconst initialState = {\r\n    clientList: CLIENT_LIST,\r\n    clientKey: '',\r\n}\r\nexport const dealsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_DEAL: {\r\n            return {\r\n                ...state,\r\n                clientList: [...state.clientList, action.payload]\r\n            }\r\n        }\r\n        case DELETE_DEAL: {\r\n            return {\r\n                ...state,\r\n                clientList: state.clientList.filter(item => item.key !== action.payload.key)\r\n            }\r\n        }\r\n        case UPDATE_DEAL: {\r\n            return {\r\n                ...state,\r\n                clientKey: action.payload.key\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const income = (state) => {\r\n    if (state.deals.clientList.length === 0) {\r\n        return 0\r\n    } else {\r\n        return state.deals.clientList.map(item => item.summary).reduce((a, b) => a + b)\r\n    }\r\n}\r\nexport const addDealCreator = (payload) => ({type: ADD_DEAL, payload})\r\nexport const deleteDealCreator = (payload) => ({type: DELETE_DEAL, payload})\r\nexport const updateDealCreator = (payload) => ({type: UPDATE_DEAL, payload})\r\nexport const deals = (state) => state.deals.clientList.sort(compare)\r\nexport const clientKey = (state) => state.deals.clientKey\r\n\r\n\r\n","import {Table} from \"antd\";\r\nimport {useEffect, useState} from \"react\";\r\nimport AddClient from \"../components/AddUser/AddClient\";\r\nimport {dealsColumns, DELETE_BUTTON} from \"../store/constant\";\r\nimport Backdrop from \"../components/Ui/Backdrop\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addDealCreator,\r\n    deals,\r\n    deleteDealCreator,\r\n    clientKey,\r\n    updateDealCreator,\r\n    income\r\n} from \"../store/redux/dealsReducer\";\r\n\r\nconst Deals = ({clientIncomeHandler}) => {\r\n    const [clientFormIsOpen, setClientFormIsOpen] = useState(false)\r\n    const [updatedClient, setUpdatedClient] = useState(false)\r\n    const dealsStore = useSelector(deals)\r\n    const updatedClientKey = useSelector(clientKey)\r\n    const dealIncome = useSelector(income)\r\n    const dispatch = useDispatch()\r\n    const clientHandler = (button, tag) => {\r\n        if (tag === DELETE_BUTTON) {\r\n            dispatch(deleteDealCreator(button))\r\n        } else {\r\n            setClientFormIsOpen(false)\r\n            setUpdatedClient(true)\r\n            dispatch(updateDealCreator(button))\r\n            dispatch(deleteDealCreator(button))\r\n        }\r\n    }\r\n    dealsColumns.filter(item => item.key === 'actions').map(item => item.render = (actions, record) => {\r\n        const handleButton = (e) => {\r\n            const tag = e.currentTarget.dataset.tag\r\n            clientHandler(record, tag)\r\n        }\r\n        return (\r\n            <>\r\n                {actions.map((tag, index) => <div key={index}>\r\n                    <button className={`button ${tag}`}\r\n                            data-tag={tag}\r\n                            key={index}\r\n                            name={tag} onClick={handleButton}>\r\n                        {tag}\r\n                    </button>\r\n                </div>)}\r\n            </>\r\n        )\r\n    })\r\n    const clientFormHandler = () => {\r\n        setClientFormIsOpen(prev => !prev)\r\n    }\r\n    const confirmClient = (client) => {\r\n        if (client.price === '' || client.quantity === '') {\r\n            return;\r\n        }\r\n        dispatch(addDealCreator(\r\n            {...client, key: updatedClientKey || Date.now()}\r\n        ))\r\n        dispatch(updateDealCreator(''))\r\n        setClientFormIsOpen(false)\r\n        setUpdatedClient(false)\r\n    }\r\n    useEffect(() => {\r\n        clientIncomeHandler(dealIncome)\r\n    }, [clientIncomeHandler, dealIncome])\r\n\r\n    const backdropHandler = () => {\r\n        setClientFormIsOpen(prev => !prev)\r\n    }\r\n    return <>\r\n        <button onClick={clientFormHandler}>Add Client</button>\r\n        {clientFormIsOpen && <AddClient onClientConfirm={confirmClient}/>}\r\n        {clientFormIsOpen && <Backdrop backdropHandler={backdropHandler}/>}\r\n        <Table dataSource={dealsStore} columns={dealsColumns}/>;\r\n        <h2>TotalIncome is {dealIncome}</h2>\r\n        {updatedClient && <AddClient onClientConfirm={confirmClient}/>}\r\n        {updatedClient && <Backdrop backdropHandler={backdropHandler}/>}\r\n    </>\r\n}\r\nexport default Deals\r\n// setUpdatedClientKey(button.key)\r\n//   setDataSource(dataSource.filter(emp => emp.key !== button.key))\r\n//   setDataSource(dataSource.filter(emp => emp.key !== button.key))\r\n//  const [updatedClientKey, setUpdatedClientKey] = useState('')\r\n//  const [dataSource, setDataSource] = useState(CLIENT_LIST);\r\n//CLIENT_LIST  //import {compare} from \"../common/Helpers\";3\r\n// setDataSource(\r\n//   prev => (\r\n//      [\r\n//  ...prev,\r\n//  {\r\n//     ...clientList,\r\n//      key:updatedClientKey || Date.now()\r\n//  }].sort(compare)\r\n// ))\r\n// useEffect(() => {\r\n//     clientIncomeHandler(income)\r\n// }, [clientIncomeHandler, income])\r\n// let income =deal// dataSource\r\n//     .map(item => item.summary).reduce((a, b) => a + b)\r\n// const columns = [\r\n//     {\r\n//         title: 'Client',\r\n//         dataIndex: 'client',\r\n//         key: 'client',\r\n//     },\r\n//     {\r\n//         title: 'Product',\r\n//         dataIndex: 'product',\r\n//         key: 'product',\r\n//     },\r\n//     {\r\n//         title: 'Date Of Order',\r\n//         dataIndex: 'date',\r\n//         key: 'date',\r\n//     },\r\n//     {\r\n//         title: 'Price',\r\n//         dataIndex: 'price',\r\n//         key: 'price',\r\n//     },\r\n//     {\r\n//         title: 'Quantity',\r\n//         dataIndex: 'quantity',\r\n//         key: 'quantity',\r\n//     },\r\n//     {\r\n//         title: 'Summary',\r\n//         dataIndex: 'summary',\r\n//         key: 'summary',\r\n//     },\r\n//     {\r\n//         title: 'Status',\r\n//         dataIndex: 'status',\r\n//         key: 'status',\r\n//     },\r\n//     {\r\n//         title: 'Actions',\r\n//         dataIndex: 'actions',\r\n//         key: 'actions',\r\n//         render: (actions, record) => {\r\n//             const handleButton = (e) => {\r\n//                 const tag = e.currentTarget.dataset.tag\r\n//                 clientHandler(record, tag)\r\n//             }\r\n//             return (\r\n//                 <>\r\n//                     {actions.map(tag => <div key={Math.random()}>\r\n//                             <button className=\"button\"\r\n//                                     data-tag={tag}\r\n//                                     key={Math.random()}\r\n//                                     name={tag} onClick={handleButton}>\r\n//                                 {tag}\r\n//                             </button>\r\n//                         </div>\r\n//                     )}\r\n//                 </>\r\n//             )\r\n//         }\r\n//     },\r\n// ];\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {Loading} from \"./components/Ui/Loading\";\r\nimport MainEmployeeTable from \"./components/Table/MainEmployeeTable\";\r\nimport MainHeader from \"./components/Ui/MainHeader\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Costs from \"./pages/Costs\";\r\nimport Budget from \"./pages/Budget\";\r\nimport './App.css';\r\nimport Deals from \"./pages/Deals\";\r\n\r\n\r\nfunction App() {\r\n    const [totalSalaryForCosts, setTotalSalaryForCosts] = useState(0)\r\n    const [clientIncome, setClientIncome] = useState(0)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    useEffect(() => {\r\n            const timer = setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 200)\r\n            return () => {\r\n                clearTimeout(timer)\r\n            }\r\n        }\r\n        , [])\r\n    const totalSalary = (totalSalary) => {\r\n        setTotalSalaryForCosts(totalSalary)\r\n    }\r\n    const clientIncomeHandler = useCallback((clientIncome) => {\r\n        setClientIncome(clientIncome)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <MainHeader/>\r\n            <Switch>\r\n                <Route path='/' exact>\r\n                    {isLoading && <Loading/>}\r\n                    <MainEmployeeTable totalSalary={totalSalary} isLoading={isLoading}/>\r\n                </Route>\r\n                <Route path='/costs' exact>\r\n                    <Costs totalSalary={totalSalaryForCosts}/>\r\n                </Route>\r\n                <Route path='/budget' exact>\r\n                    <Budget totalSalary={totalSalaryForCosts} clientIncome={clientIncome}/>\r\n                </Route>\r\n                <Route path='/deals'>\r\n                    <Deals clientIncomeHandler={clientIncomeHandler}/>\r\n                </Route>\r\n                <Route path='/:other'>\r\n                    <Redirect to=\"/\"/>\r\n                </Route>\r\n\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {dealsReducer} from \"./dealsReducer\";\r\nimport {employeesReducer} from \"./employeesReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    deals: dealsReducer,\r\n    employees: employeesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers\r\n\r\n)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/redux/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}